[tool:pytest]
# Pytest configuration for Trading Platform

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=trading_platform
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --junitxml=pytest-results.xml
    --maxfail=5
    --durations=10

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require infrastructure)
    e2e: End-to-end tests (full system)
    performance: Performance and load tests
    slow: Slow running tests
    smoke: Smoke tests for basic functionality
    security: Security-related tests
    database: Tests that require database
    kafka: Tests that require Kafka
    redis: Tests that require Redis
    mongodb: Tests that require MongoDB
    llm: Tests that require LLM API access
    broker: Tests that require broker integration
    network: Tests that require network access
    docker: Tests that require Docker

# Asyncio configuration
asyncio_mode = auto

# Timeout for tests
timeout = 300

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:kafka.*
    ignore::UserWarning:urllib3.*

# Environment variables for testing
env =
    ENVIRONMENT = testing
    LOG_LEVEL = DEBUG
    POSTGRES_HOST = localhost
    POSTGRES_PORT = 5432
    POSTGRES_DB = trading_platform_test
    POSTGRES_USER = test_user
    POSTGRES_PASSWORD = test_password
    REDIS_HOST = localhost
    REDIS_PORT = 6379
    MONGODB_HOST = localhost
    MONGODB_PORT = 27017
    MONGODB_USER = test_user
    MONGODB_PASSWORD = test_password
    KAFKA_BOOTSTRAP_SERVERS = localhost:29092
    SECRETS_BACKEND = env
    ENABLE_PAPER_TRADING = true
    ENABLE_LIVE_TRADING = false

# Test collection
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    ".tox",
    ".eggs",
    "*.egg",
]

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = trading_platform
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
